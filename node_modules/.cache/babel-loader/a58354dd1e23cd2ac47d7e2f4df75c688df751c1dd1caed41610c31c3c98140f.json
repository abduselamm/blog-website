{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"couldn't fetch the data for that resource\");\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (error.name == 'AbortError') {\n        console.log('fetch aborted');\n      } else {\n        setIsPending(false);\n        setError(err.message);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"PrToc0302DwPCniAS5G+bqg97Mo=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["C:/Users/Mardin/Documents/react/hubo-blog/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error,setError]=useState(null);\r\n\r\n  \r\n    useEffect(()=>{\r\n        const abortCont = new AbortController();\r\n        fetch(url, { signal: abortCont.signal })\r\n          .then(res => {\r\n            if(!res.ok) {\r\n              throw Error(\"couldn't fetch the data for that resource\");\r\n    \r\n            }\r\n            return res.json();\r\n          })\r\n          .then(data=> {\r\n          setData(data)\r\n          setIsPending(false)\r\n          setError(null)\r\n          })\r\n          .catch(err =>{\r\n            if(error.name=='AbortError'){\r\n                console.log('fetch aborted');\r\n            }\r\n            else{\r\n                setIsPending(false);\r\n                setError(err.message);\r\n            }\r\n\r\n               \r\n          });\r\n          return () => abortCont.abort()\r\n      },[url]);\r\n  return {data,isPending,error};\r\n}\r\n \r\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,IAAI,CAAC;EAGrCD,SAAS,CAAC,MAAI;IACV,MAAMW,SAAS,GAAG,IAAIC,eAAe,EAAE;IACvCC,KAAK,CAACV,GAAG,EAAE;MAAEW,MAAM,EAAEH,SAAS,CAACG;IAAO,CAAC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACX,IAAG,CAACA,GAAG,CAACC,EAAE,EAAE;QACV,MAAMC,KAAK,CAAC,2CAA2C,CAAC;MAE1D;MACA,OAAOF,GAAG,CAACG,IAAI,EAAE;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACV,IAAI,IAAG;MACbC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IACd,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG,IAAG;MACX,IAAGZ,KAAK,CAACa,IAAI,IAAE,YAAY,EAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAChC,CAAC,MACG;QACAhB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACW,GAAG,CAACI,OAAO,CAAC;MACzB;IAGF,CAAC,CAAC;IACF,OAAO,MAAMd,SAAS,CAACe,KAAK,EAAE;EAClC,CAAC,EAAC,CAACvB,GAAG,CAAC,CAAC;EACZ,OAAO;IAACE,IAAI;IAACE,SAAS;IAACE;EAAK,CAAC;AAC/B,CAAC;AAAAL,EAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}